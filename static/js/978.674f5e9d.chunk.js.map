{"version":3,"file":"static/js/978.674f5e9d.chunk.js","mappings":"sRAEaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,QAEhBG,EAASL,EAAAA,EAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8EAMjBK,EAAOP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gF,SChBfO,EAAW,WACpB,OACIC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,UAASC,SAAC,kDAE/B,ECGaC,EAAc,WACzB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAChBI,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAChC,GAAG,CAACC,IAECF,EAIL,OACEO,EAAAA,EAAAA,MAAC1B,EAAI,CAAAa,SAAA,CACgB,IAAlBM,EAAOQ,SAAgBhB,EAAAA,EAAAA,KAACD,EAAQ,IAChCS,EAAOS,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OAChCN,EAAAA,EAAAA,MAACtB,EAAI,CAAAS,SAAA,EACHF,EAAAA,EAAAA,KAACL,EAAM,CAAAO,SAAEiB,KACTnB,EAAAA,EAAAA,KAACH,EAAI,CAAAK,SAAEkB,MAFEC,EAGJ,MAIf,EAGA,G","sources":["components/MovieReview/MovieReview.styled.js","components/Error/NoReview.jsx","components/MovieReview/MovieReview.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  font-size: 22px;\n  color: var(--accent);\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  color: var(--secondary);\n  line-height: 1.68;\n`;","export const NoReview = () => {\n    return (\n        <p className=\"message\">Sorry, we don't found any review on this movie</p>\n    )\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieRatings } from 'api';\nimport { Author, Item, List, Text } from './MovieReview.styled';\nimport { NoReview } from 'components/Error/NoReview';\n\nexport const MovieReview = () => {\n  const [review, setReview] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieRatings(movieId).then(setReview);\n  }, [movieId]);\n\n  if (!review) {\n    return;\n  }\n\n  return (\n    <List>\n      {review.length === 0 && <NoReview />}\n      {review.map(({ author, content, id }) => (\n        <Item key={id}>\n          <Author>{author}</Author>\n          <Text>{content}</Text>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n\nexport default MovieReview\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Author","_templateObject3","Text","_templateObject4","NoReview","_jsx","className","children","MovieReview","_useState","useState","_useState2","_slicedToArray","review","setReview","movieId","useParams","useEffect","getMovieRatings","then","_jsxs","length","map","_ref","author","content","id"],"sourceRoot":""}